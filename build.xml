<?xml version="1.0" encoding="UTF-8"?>

<!--build.xml generated by maven from project.xml version 0.8
  on date December 29 2005, time 2047-->

<project default="jar" name="joda-time-i18n" basedir=".">
  <!--Load local and user build preferences-->

  <property file="build.properties">
  </property>
  <property file="${user.home}/build.properties">
  </property>
  <!--Build properties-->

  <property name="defaulttargetdir" value="${basedir}/target">
  </property>
  <property name="libdir" value="${user.home}/.maven/repository">
  </property>
  <property name="classesdir" value="${basedir}/target/classes">
  </property>
  <property name="testclassesdir" value="${basedir}/target/test-classes">
  </property>
  <property name="testreportdir" value="${basedir}/target/test-reports">
  </property>
  <property name="distdir" value="${basedir}/dist">
  </property>
  <property name="javadocdir" value="${basedir}/dist/docs/api">
  </property>
  <property name="final.name" value="joda-time-i18n-0.8">
  </property>
  <property name="proxy.host" value="">
  </property>
  <property name="proxy.port" value="">
  </property>
  <property name="proxy.username" value="">
  </property>
  <property name="proxy.password" value="">
  </property>
  <path id="build.classpath">
    <pathelement location="${libdir}/joda-time/jars/joda-time-1.3.jar">
    </pathelement>
  </path>
  <target name="init" description="o Initializes some properties">
    <mkdir dir="${libdir}">
    </mkdir>
    <condition property="noget">
      <equals arg2="only" arg1="${build.sysclasspath}">
      </equals>
    </condition>
    <!--Test if JUNIT is present in ANT classpath-->

    <available property="Junit.present" classname="junit.framework.Test">
    </available>
    <!--Test if user defined a proxy-->

    <condition property="useProxy">
      <and>
        <isset property="proxy.host">
        </isset>
        <not>
          <equals trim="true" arg2="" arg1="${proxy.host}">
          </equals>
        </not>
      </and>
    </condition>
  </target>
  <target name="compile" description="o Compile the code" depends="get-deps">
    <mkdir dir="${classesdir}">
    </mkdir>
    <javac destdir="${classesdir}" deprecation="true" debug="true" optimize="false" excludes="**/package.html">
      <src>
        <pathelement location="${basedir}/src/java">
        </pathelement>
      </src>
      <classpath refid="build.classpath">
      </classpath>
    </javac>
    <mkdir dir="${classesdir}/meta-inf">
    </mkdir>
    <copy todir="${classesdir}/meta-inf">
      <fileset dir="${basedir}/.">
        <include name="NOTICE.txt">
        </include>
      </fileset>
    </copy>
  </target>
  <target name="jar" description="o Create the jar" depends="compile,test">
    <jar jarfile="${defaulttargetdir}/${final.name}.jar" excludes="**/package.html" basedir="${classesdir}">
    </jar>
  </target>
  <target name="clean" description="o Clean up the generated directories">
    <delete dir="${defaulttargetdir}">
    </delete>
    <delete dir="${distdir}">
    </delete>
  </target>
  <target name="dist" description="o Create a distribution" depends="jar, javadoc">
    <mkdir dir="dist">
    </mkdir>
    <copy todir="dist">
      <fileset dir="${defaulttargetdir}" includes="*.jar">
      </fileset>
      <fileset dir="${basedir}" includes="LICENSE*, README*">
      </fileset>
    </copy>
  </target>
  <target name="test" description="o Run the test cases" if="test.failure" depends="internal-test">
    <fail message="There were test failures.">
    </fail>
  </target>
  <target name="internal-test" if="Junit.present" depends="junit-present,compile-tests">
    <mkdir dir="${testreportdir}">
    </mkdir>
    <junit dir="${basedir}" failureproperty="test.failure" printSummary="yes" fork="true" haltonerror="true">
      <sysproperty key="basedir" value=".">
      </sysproperty>
      <formatter type="xml">
      </formatter>
      <formatter usefile="false" type="plain">
      </formatter>
      <classpath>
        <path refid="build.classpath">
        </path>
        <pathelement path="${testclassesdir}">
        </pathelement>
        <pathelement path="${classesdir}">
        </pathelement>
      </classpath>
      <batchtest todir="${testreportdir}">
        <fileset dir="${basedir}/src/test">
          <include name="org/joda/time/contrib/i18n/**/Test*.java">
          </include>
        </fileset>
      </batchtest>
    </junit>
  </target>
  <target name="junit-present" unless="Junit.present" depends="init">
    <echo>================================= WARNING ================================</echo>
    <echo>Junit isn't present in your ${ANT_HOME}/lib directory. Tests not executed.</echo>
    <echo>==========================================================================</echo>
  </target>
  <target name="compile-tests" if="Junit.present" depends="junit-present,compile">
    <mkdir dir="${testclassesdir}">
    </mkdir>
    <javac destdir="${testclassesdir}" deprecation="true" debug="true" optimize="false" excludes="**/package.html">
      <src>
        <pathelement location="${basedir}/src/test">
        </pathelement>
      </src>
      <classpath>
        <path refid="build.classpath">
        </path>
        <pathelement path="${classesdir}">
        </pathelement>
      </classpath>
    </javac>
  </target>
  <target name="javadoc" description="o Generate javadoc" depends="get-deps">
    <mkdir dir="${javadocdir}">
    </mkdir>
    <tstamp>
      <format pattern="2005-yyyy" property="year">
      </format>
    </tstamp>
    <property name="copyright" value="Copyright &amp;copy;  Joda.org. All Rights Reserved.">
    </property>
    <property name="title" value="Joda time I18N support 0.8 API">
    </property>
    <javadoc use="true" private="true" destdir="${javadocdir}" author="true" version="true" sourcepath="${basedir}/src/java" packagenames="org.joda.time.contrib.i18n.*">
      <classpath>
        <path refid="build.classpath">
        </path>
      </classpath>
    </javadoc>
  </target>
  <target name="get-dep-joda-time.jar" description="o Download the dependency : joda-time.jar" unless="joda-time.jar" depends="init,setProxy,noProxy,get-custom-dep-joda-time.jar">
    <mkdir dir="${libdir}/joda-time/jars/">
    </mkdir>
    <get dest="${libdir}/joda-time/jars/joda-time-1.3.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/joda-time/jars/joda-time-1.3.jar">
    </get>
  </target>
  <target name="get-custom-dep-joda-time.jar" if="joda-time.jar" depends="init,setProxy,noProxy">
    <mkdir dir="${libdir}/joda-time/jars/">
    </mkdir>
    <get dest="${libdir}/joda-time/jars/joda-time-1.3.jar" usetimestamp="true" ignoreerrors="true" src="${joda-time.jar}">
    </get>
  </target>
  <target name="get-deps" unless="noget" depends="get-dep-joda-time.jar">
  </target>
  <target name="setProxy" if="useProxy" depends="init">
    <!--Proxy settings works only with a JDK 1.2 and higher.-->

    <echo>Proxy used :</echo>
    <echo>Proxy host [${proxy.host}]</echo>
    <echo>Proxy port [${proxy.port}]</echo>
    <echo>Proxy user [${proxy.username}]</echo>
    <setproxy proxyuser="${proxy.username}" proxyport="${proxy.port}" proxypassword="${proxy.password}" proxyhost="${proxy.host}">
    </setproxy>
  </target>
  <target name="noProxy" unless="useProxy" depends="init">
    <echo>Proxy not used.</echo>
  </target>
  <target name="install-maven">
    <get dest="${user.home}/maven-install-latest.jar" usetimestamp="true" src="${repo}/maven/maven-install-latest.jar">
    </get>
    <unjar dest="${maven.home}" src="${user.home}/maven-install-latest.jar">
    </unjar>
  </target>
</project>